pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }()

    includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}


plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
//    id "com.android.application" version "34.0.0" apply false
    id "org.jetbrains.kotlin.android" version "1.9.20" apply false
//    id "com.android.tools.build.gradle" version "7.2.0" apply false
    id "com.google.gms.google-services" version "4.3.10" apply false
}
dependencyResolutionManagement {

    /**
     * The dependencyResolutionManagement.repositories
     * block is where you configure the repositories and dependencies used by
     * all modules in your project, such as libraries that you are using to
     * create your application. However, you should configure module-specific
     * dependencies in each module-level build.gradle file. For new projects,
     * Android Studio includes Google's Maven repository and the Maven Central
     * Repository by default, but it does not configure any dependencies (unless
     * you select a template that requires some).
     */

    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        google()
        mavenCentral()
    }
}
rootProject.name = "fitness"
include ":app"


//plugins {
////    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
////    id "com.android.application" version "34.0.0" apply false
//    id "org.jetbrains.kotlin.android" version "1.9.20" apply false
////    id "com.google.gms.google-services" version "4.4.0" apply false
////    id "com.google.firebase.crashlytics" version "2.9.9" apply false
////    id  "com.google.firebase:firebase-bom" version "32.0.0" apply false
////    id "com.google.firebase:firebase-analytics-ktx"
//}
//
//
//include ':app'



def localPropertiesFile = new File(rootProject.projectDir, "local.properties")
def properties = new Properties()

assert localPropertiesFile.exists()
localPropertiesFile.withReader("UTF-8") { reader -> properties.load(reader) }

def flutterSdkPath = properties.getProperty("flutter.sdk")
assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
apply from: "$flutterSdkPath/packages/flutter_tools/gradle/app_plugin_loader.gradle"

